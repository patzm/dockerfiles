version: "3.7"

networks:
  auth_internal:
    external: true
  backend:
  traefik:
    name: traefik
    external: true

volumes:
  # unused, mounted to prevent anonymous volumes
  pgdata:

x-op-restart-policy: &restart_policy
  restart: unless-stopped
  labels:
    - traefik.enable=false
x-op-app: &app
  <<: *restart_policy
  image: openproject/community:${OPENPROJECT_TAG:-latest}
  environment:
    RAILS_CACHE_STORE: "memcache"
    OPENPROJECT_CACHE__MEMCACHE__SERVER: "cache:11211"
    OPENPROJECT_RAILS__RELATIVE__URL__ROOT: "${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}"
    DATABASE_URL: "postgres://postgres:p4ssw0rd@db/postgres?pool=20&encoding=unicode&reconnect=true"
    PORT: 8080
    RAILS_MIN_THREADS: 4
    RAILS_MAX_THREADS: 16
    # set to true to enable the email receiving feature. See ./docker/cron for more options
    IMAP_ENABLED: "${IMAP_ENABLED:-false}"
  volumes:
    - /mnt/ssd-1tb/docker/openproject/opdata:/var/openproject/assets
    - pgdata:/var/openproject/pgdata

services:
  db:
    image: postgres:13
    <<: *restart_policy
    stop_grace_period: "3s"
    volumes:
      - /mnt/ssd-1tb/docker/openproject/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: p4ssw0rd
    networks:
      - backend

  cache:
    image: memcached
    <<: *restart_policy
    networks:
      - backend

  web:
    <<: *app
    command: "./docker/prod/web"
    networks:
      - auth_internal
      - backend
      - traefik
    depends_on:
      - db
      - cache
      - seeder
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health_checks/default"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.op.entrypoints=websecure"
      - "traefik.http.routers.op.rule=Host(`openproject.patz.app`)"
      - "traefik.http.routers.op.tls=true"
      - "traefik.http.routers.op.tls.certresolver=patz.app"
      - "traefik.http.routers.op.tls.domains[0].main=patz.app"
      - "traefik.http.routers.op.tls.domains[0].sans=openproject.patz.app"
      - "traefik.http.services.op.loadbalancer.server.port=8080"

  worker:
    <<: *app
    command: "./docker/prod/worker"
    networks:
      - backend
    depends_on:
      - db
      - cache
      - seeder

  cron:
    <<: *app
    command: "./docker/prod/cron"
    networks:
      - backend
    depends_on:
      - db
      - cache
      - seeder

  seeder:
    <<: *app
    command: "./docker/prod/seeder"
    restart: on-failure
    networks:
      - backend

