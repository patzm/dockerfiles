#! /usr/bin/env bash

set -e
trap "exit" INT

# Read CLI arguments
NODE=$1
PORT=$2
AUTH_TOKEN=$3
STORJ_INSTANCE=$4

if [ -z "$NODE" ] || [ -z "$PORT" ] || [ -z "$AUTH_TOKEN" ] || [ -z "$STORJ_INSTANCE" ]; then
  echo "Error: NODE, PORT, AUTH_TOKEN, and STORJ_INSTANCE arguments are required."
  exit 1
fi

_SHARED_STORJ_DIR=/mnt/ssd-256gb/docker/storj
STORJ_SECRETS="${_SHARED_STORJ_DIR}/secrets.env"
NODE_DIR="/mnt/${NODE}"
DATA_ROOT=${NODE_DIR}/storj

if [ ! -d "${NODE_DIR}" ]; then
  echo "Error: ${NODE_DIR} does not exist."
  exit 1
fi

echo "Creating the storage node directories in ${DATA_ROOT}"
IDENTITY_DIR="${DATA_ROOT}/identity"
sudo mkdir -p ${IDENTITY_DIR}
sudo mkdir -p ${DATA_ROOT}/config
sudo chown -R $(id -u):$(id -g) ${DATA_ROOT}

NODE_NAME="patzm-${STORJ_INSTANCE}-${NODE}"
echo "Using node name: ${NODE_NAME}"
echo "Create & authorize the identity file with the following commands, then move it to ${IDENTITY_DIR}"
echo "This might take a while ... Run it on a powerful machine!"
echo "mkdir -p ${NODE_NAME}/identity"
echo "identity create ${NODE_NAME} --concurrency 32"
echo "identity authorize ${NODE_NAME} '${AUTH_TOKEN}'"
echo "mv ~/.local/share/storj/identity/${NODE_NAME}/* ${NODE_NAME}/identity"
echo "rsync -avz ${NODE_NAME}/identity/ my-target"

STORAGE="$(df -h ${DATA_ROOT} | awk 'NR==2 {print $4}')B"

NODE_CONFIG_FILE=${DATA_ROOT}/.env
cat > ${NODE_CONFIG_FILE} <<EOF
STORAGE=${STORAGE}
NODE=${NODE}
DATA_ROOT=${DATA_ROOT}
STORJ_SECRETS=${STORJ_SECRETS}
EOF

echo "Preparation of the node is complete. Launch it by running:"
echo "cd ${DATA_ROOT}; sudo UID=$(id -u) GID=$(id -g) docker compose -f insecure.docker-compose.yml up -d"
