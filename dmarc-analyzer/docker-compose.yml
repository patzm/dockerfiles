version: "3.6"


networks:
  internal:
  auth_internal:
    external: true
  traefik:
    name: traefik
    external: true


services:
  dmarc-report:
    image: "gutmensch/dmarc-report:latest"
    # hostname: dmarc-report
    restart: unless-stopped
    networks:
      - internal
      - auth_internal
      - traefik
    # container_name: dmarc-report
    depends_on:
      - db
    env_file: ../stack.env
    environment:
      - "REPORT_DB_HOST=db"
      - "REPORT_DB_PORT=3306"
      - "REPORT_DB_NAME=dmarc_report"
      - "REPORT_DB_USER=dmarc_report"
      - "REPORT_DB_PASS=${MYSQL_PASSWORD}"
      - "PARSER_IMAP_SERVER=mail.patz.family"
      - "PARSER_IMAP_PORT=993"
      - "PARSER_IMAP_SSL=0"
      - "PARSER_IMAP_TLS=1"
      - "PARSER_IMAP_USER=dmarc@patz.app"
      - "PARSER_IMAP_READ_FOLDER=Inbox"
      - "PARSER_IMAP_MOVE_FOLDER=processed"
      - "PARSER_IMAP_MOVE_FOLDER_ERR=error"
    labels:
      - traefik.enable=true
      - traefik.http.routers.dmarc.entrypoints=websecure
      - traefik.http.routers.dmarc.rule=Host(`dmarc.patz.app`)
      - traefik.http.routers.dmarc.service=dmarc
      - traefik.http.routers.dmarc.tls=true
      - traefik.http.routers.dmarc.tls.certresolver=patz.app
      - traefik.http.routers.dmarc.tls.domains[0].main=patz.app
      - traefik.http.routers.dmarc.tls.domains[0].sans=dmarc.patz.app
      - traefik.http.routers.dmarc.middlewares=keycloak@file
      - traefik.http.services.dmarc.loadbalancer.server.port=80


  db:
    image: mariadb:10
    command: --skip-innodb-read-only-compressed
    restart: unless-stopped
    networks:
      - internal
    env_file: ../stack.env
    environment:
      - "MYSQL_DATABASE=dmarc_report"
      - "MYSQL_USER=dmarc_report"
    volumes:
      - /mnt/ssd-1tb/docker/dmarc-analyzer/db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 5
    labels:
      - traefik.enable=false
