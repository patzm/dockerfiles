networks:

  auth_internal:
    external: true

  sites:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24

  traefik:
    name: traefik
    external: true


services:

  wg-sites:
    image: lscr.io/linuxserver/wireguard:${WIREGUARD_SITES_TAG:-latest}
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - /mnt/ssd-1tb/docker/wireguard/sites:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    networks:
      sites:
        ipv4_address: 172.19.0.2
    environment:
      - PUID=1001
      - PGID=1003
      - TZ=Europe/Berlin
      - SERVERURL=wg.patz.app
      - SERVERPORT=51820
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.9.0.0
      - ALLOWEDIPS=0.0.0.0/0
      - PERSISTENTKEEPALIVE_PEERS=25
      - LOG_CONFS=true
      - PEERS=vat,
      - SERVER_ALLOWEDIPS_PEER_vat=192.168.179.0/24

  wg-easy:
    image: ghcr.io/wg-easy/wg-easy:${WIREGUARD_EASY_TAG:-latest}
    restart: unless-stopped
    volumes:
      - /mnt/ssd-1tb/docker/wireguard/easy:/etc/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    ports:
      - "51821:51821/udp"
    networks:
      auth_internal:
      traefik:
    env_file: ../stack.env
    environment:
      - WG_HOST=wg.patz.app
      - WG_PORT=51821
    labels:
      - traefik.enable=true
      - traefik.http.routers.wireguard.entrypoints=websecure
      - traefik.http.routers.wireguard.rule=Host(`wg.patz.app`)
      - traefik.http.routers.wireguard.middlewares=keycloak@file
      - traefik.http.routers.wireguard.tls.certresolver=patz.app
      - traefik.http.services.wireguard.loadbalancer.server.port=51821
