volumes:
  redis:


networks:
  auth_internal:
    external: true
  outline:
  traefik:
    name: traefik
    external: true


services:

  outline:
    image: outlinewiki/outline:${OUTLINE_TAG:-latest}
    restart: unless-stopped
    command: sh -c "yarn db:migrate --env=production-ssl-disabled && yarn start --env=production-ssl-disabled"
    env_file: ../stack.env
    networks:
      - traefik
      - outline
      - auth_internal
    depends_on:
      - postgres
      - redis
      - storage
    labels:
      - traefik.enable=true
      - traefik.http.routers.outline.entrypoints=websecure
      - traefik.http.routers.outline.middlewares=security-headers@file
      - traefik.http.routers.outline.rule=Host(`outline.patz.app`)
      - traefik.http.routers.outline.tls=true
      - traefik.http.routers.outline.tls.certresolver=patz.app
      - traefik.http.routers.outline.tls.domains[0].main=patz.app
      - traefik.http.routers.outline.tls.domains[0].sans=outline.patz.app
      - traefik.http.services.outline.loadbalancer.server.port=3000

  redis:
    image: redis
    restart: unless-stopped
    env_file: ../stack.env
    networks:
      - outline
    volumes:
      - redis:/data
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres:14
    restart: unless-stopped
    env_file: ../stack.env
    networks:
      - outline
    volumes:
      - /mnt/ssd-1tb/docker/outline/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "outline", "-U", "user"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: outline

  storage:
    image: minio/minio
    restart: unless-stopped
    env_file: ../stack.env
    networks:
      - outline
      - traefik
    entrypoint: sh
    command: -c 'minio server /data --console-address ":9001"'
    volumes:
      - /mnt/ssd-1tb/docker/outline/storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    labels:
      - traefik.enable=true

      - traefik.http.routers.outline-data.entrypoints=websecure
      - traefik.http.routers.outline-data.middlewares=security-headers@file
      - traefik.http.routers.outline-data.rule=Host(`outline-data.patz.app`)
      - traefik.http.routers.outline-data.tls=true
      - traefik.http.routers.outline-data.tls.certresolver=patz.app
      - traefik.http.routers.outline-data.tls.domains[0].main=patz.app
      - traefik.http.routers.outline-data.tls.domains[0].sans=outline-data.patz.app
      - traefik.http.services.outline-data.loadbalancer.server.port=9000

      - traefik.http.routers.outline-data-admin.entrypoints=websecure
      - traefik.http.routers.outline-data-admin.rule=Host(`outline-data-admin.patz.app`)
      - traefik.http.routers.outline-data-admin.tls=true
      - traefik.http.routers.outline-data-admin.tls.certresolver=patz.app
      - traefik.http.routers.outline-data-admin.tls.domains[0].main=patz.app
      - traefik.http.routers.outline-data-admin.tls.domains[0].sans=outline-data-admin.patz.app
      - traefik.http.services.outline-data-admin.loadbalancer.server.port=9001
