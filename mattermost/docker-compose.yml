networks:
  auth_internal:
    external: true
  default:
  traefik:
    name: traefik
    external: true


services:

  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    pids_limit: 100
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - /mnt/ssd-1tb/docker/mattermost/db/var/lib/postgresql/data:/var/lib/postgresql/data
    environment:
      # timezone inside container
      - TZ

      # necessary Postgres options/variables
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    env_file: ../stack.env
    networks:
      - default

  mattermost:
    image: mattermost/mattermost-team-edition:${MATTERMOST_TAG}
    restart: unless-stopped
    depends_on:
      - postgres
    security_opt:
      - no-new-privileges:true
    # pids_limit: 200
    tmpfs:
      - /tmp
    volumes:
      ## Inside the container the uid and gid is 2000. The folder owner can be set with
      ## `sudo chown -R 2000:2000 ./volumes/app/mattermost`.
      - /mnt/ssd-1tb/docker/mattermost/config:/mattermost/config:rw
      - /mnt/ssd-1tb/docker/mattermost/data:/mattermost/data:rw
      - /mnt/ssd-1tb/docker/mattermost/logs:/mattermost/logs:rw
      - /mnt/ssd-1tb/docker/mattermost/plugins:/mattermost/plugins:rw
      - /mnt/ssd-1tb/docker/mattermost/client/plugins:/mattermost/client/plugins:rw
      - /mnt/ssd-1tb/docker/mattermost/bleve-indexes:/mattermost/bleve-indexes:rw
    environment:
      # timezone inside container
      - TZ

      # necessary Mattermost options/variables (see env.example)
      - MM_SQLSETTINGS_DRIVERNAME
      - MM_SQLSETTINGS_DATASOURCE

      # necessary for bleve
      - MM_BLEVESETTINGS_INDEXDIR

      # additional settings
      - MM_SERVICESETTINGS_SITEURL
    env_file: ../stack.env
    networks:
      - auth_internal
      - default
      - traefik
    expose:
      - 8443  # calls
    healthcheck:
      test: "curl -f http://localhost:${APP_PORT}/api/v4/system/ping || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'"
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      # TODO: enable UDP for calls
      - "traefik.http.routers.mm.entrypoints=websecure"
      - "traefik.http.routers.mm.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.mm.tls=true"
      - "traefik.http.routers.mm.tls.certresolver=patz.app"
      - "traefik.http.routers.mm.middlewares=security-headers@file"
      - "traefik.http.routers.mm.tls.domains[0].main=patz.app"
      - "traefik.http.routers.mm.tls.domains[0].sans=${DOMAIN}"
      - "traefik.http.services.mm.loadbalancer.server.port=${APP_PORT}"
